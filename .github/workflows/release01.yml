# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]


jobs:

  build:
    if: startsWith(github.ref, 'refs/tags/')

    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
    strategy:
      matrix:
        os: [ubuntu-latest]
        goarch: [amd64]
        goos: [windows]

    steps:
    - name: Check out
      uses: actions/checkout@v3

    - name: Get version
      id: get_version
      # ::set-output is deprecated, see https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands
      # run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      # run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_OUTPUT
      # run: echo "VERSION=$(git tag --points-at HEAD)" >> $GITHUB_OUTPUT

      run: echo "VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_OUTPUT

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: '>=1.19.0'
        cache: true

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

    - name: Packaging...
      run: tar czf ssc-${{ matrix.goos }}-${{ steps.get_version.outputs.VERSION }}.tgz demo.*

    - name: Release
    #  uses: softprops/action-gh-release@v1
    #  with:
    #      files: ssc-${{ matrix.goos }}-${{ steps.get_version.outputs.VERSION }}.tgz
      uses: ncipollo/release-action@v1
      with:
        artifacts: ssc-${{ matrix.goos }}-${{ steps.get_version.outputs.VERSION }}.tgz
